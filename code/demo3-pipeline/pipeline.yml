apiVersion: v1
kind: BuildConfig
metadata:
  annotations:
    pipeline.alpha.openshift.io/uses: '[{"name": "${NAME}", "namespace": "", "kind": "DeploymentConfig"}]'
  creationTimestamp: '2017-11-08T15:42:25Z'
  labels:
    name: demo3-pipeline
  name: demo3-pipeline
  namespace: myproject
  resourceVersion: '9958'
  selfLink: /oapi/v1/namespaces/myproject/buildconfigs/demo3-pipeline
  uid: 6b42fced-c49b-11e7-86d7-92c1a76705e8
spec:
  nodeSelector: null
  output: {}
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    type: None
  strategy:
    jenkinsPipelineStrategy:
      jenkinsfile: |-
        try {
           timeout(time: 20, unit: 'MINUTES') {
              node {
                  stage('build') {
                    openshiftBuild(buildConfig: 'demo3', showBuildLogs: 'true')
                  }
              }
           }
           checkpoint "Should we deploy?"
           node{
                  stage('deploy') {
                    openshiftDeploy(deploymentConfig: 'demo3')
                  }
           }
        } catch (err) {
           echo "in catch block"
           echo "Caught: ${err}"
           currentBuild.result = 'FAILURE'
           throw err
        }
    type: JenkinsPipeline
  triggers:
    - github:
        secret: secret101
      type: GitHub
    - generic:
        secret: secret101
      type: Generic
status:
  lastVersion: 2
